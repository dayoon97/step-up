<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Project">

	<!-- Project_List 테이블 -->
	<resultMap type="com.stepup.agile.projectManage.model.vo.Project" id="ProjectResultSet">
		<id property="projectCode" column="PROJECT_CODE"/>
		<result property="projectName" column="PROJECT_NAME"/>
		<result property="createDate" column="PROJECT_CREATE_DATE"/>
		<result property="createTime" column="PROJECT_CREATE_TIME"/>
		<result property="projectProceedingRate" column="PROJECT_PROCEEDING_RATE"/>
		<result property="projectParticipantCnt" column="PROJECT_PARTICIPANT_CNT"/>
		<result property="sprintTypeA" column="SPRINT_TYPE_A"/>
		<result property="sprintTypeB" column="SPRINT_TYPE_B"/>
		<result property="sprintTypeC" column="SPRINT_TYPE_C"/>
	</resultMap>
	
	<resultMap type="com.stepup.agile.projectManage.model.vo.Project" id="projectResultSet">
		<id property="projectCode" column="PROJECT_CODE"/>
		<result property="projectName" column="PROJECT_NAME"/>
		<result property="createDate" column="PROJECT_CREATE_DATE"/>
		<result property="createTime" column="PROJECT_CREATE_TIME"/>
		<collection property="userProjectList" resultMap="UserProjectListResultSet"/>
		<collection property="userTeamList" resultMap="UserTeamListResultSet"/>
		<collection property="member" resultMap="memberResultSet"/>
		<collection property="projectHistory" resultMap="projectHistoryResultSet"/>
		<collection property="team" resultMap="TeamResultSet"/>
	</resultMap>
	
	<!-- 사용자정보  -->
	<resultMap type="com.stepup.agile.userInfo.model.vo.Member" id="MemberResultSet">
		<id property="userCode" column="USER_CODE"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userPhone" column="USER_PHONE"/>
		<result property="userCompName" column="USER_COMP_NAME"/>
		<result property="userCompDept" column="USER_COMP_DEPT"/>
		<result property="userCompJob" column="USER_COMP_JOB"/>
		<result property="userEnrollDate" column="USER_ENROLL_DATE"/>
		<result property="userStatus" column="USER_STATUS"/>
		<result property="userManagerYn" column="USER_MANAGER_YN"/>
		<result property="userEnrollTime" column="USER_ENROLL_TIME"/>
	</resultMap>
	
	<!-- 팀소속이력관리 -->
	<resultMap type="com.stepup.agile.userInfo.model.vo.UserTeamList" id="UserTeamListResultSet">
		<id property="userTeamCode" column="USER_TEAM_CODE"/>
		<result property="userTeamDate" column="USER_TEAM_DATE"/>
		<result property="userTeamYn" column="USER_TEAM_YN"/>
		<result property="userCode" column="USER_CODE"/>
		<result property="teamCode" column="TEAM_CODE"/>
		<result property="userTeamTime" column="USER_TEAM_TIME"/>
	</resultMap>

	<!-- 팀코드-팀명 -->
	<resultMap type="com.stepup.agile.userInfo.model.vo.Team" id="TeamResultSet">
		<id property="teamCode" column="TEAM_CODE"/>
		<result property="teamName" column="TEAM_NAME"/>
	</resultMap>
	
	<!-- 사용자 프로젝트 소속 -->
	<resultMap type="com.stepup.agile.userInfo.model.vo.UserProjectList" id="UserProjectListResultSet">
		<id property="userProjectCode" column="USER_PROJECT_CODE"/>
		<result property="userProjectUpdateDate" column="USER_PROJECT_UPDATE_DATE"/>
		<result property="userProjectUpdateTime" column="USER_PROJECT_UPDATE_TIME"/>
		<result property="userProjectStatus" column="USER_PROJECT_STATUS"/>
		<result property="projectCode" column="PROJECT_CODE"/>
		<result property="userTeamCode" column="USER_TEAM_CODE"/>
		<result property="userProjectAuthority" column="USER_PROJECT_AUTHORITY"/>
	</resultMap>
	<!-- 사용자 프로젝트 소속 2-->
	<resultMap type="com.stepup.agile.userInfo.model.vo.UserProjectList" id="UserProjectListResultSet2">
		<id property="userProjectCode" column="USER_PROJECT_CODE"/>
		<result property="userProjectUpdateDate" column="USER_PROJECT_UPDATE_DATE"/>
		<result property="userProjectUpdateTime" column="USER_PROJECT_UPDATE_TIME"/>
		<result property="userProjectStatus" column="USER_PROJECT_STATUS"/>
		<result property="projectCode" column="PROJECT_CODE"/>
		<result property="userTeamCode" column="USER_TEAM_CODE"/>
		<result property="userProjectAuthority" column="USER_PROJECT_AUTHORITY"/>
		<collection property="userTeamList" resultMap="UserTeamListResultSet"/>
		<collection property="member" resultMap="MemberResultSet"/>
		<collection property="projectHistory" resultMap="ProjectHistoryResultSet"/>
		<collection property="project" resultMap="ProjectResultSet"/>
	</resultMap>
	
	<!-- 프로젝트 히스토리 -->
	<resultMap type="com.stepup.agile.projectManage.model.vo.ProjectHistory" id="ProjectHistoryResultSet">
		<id property="projectHistCode" column="PROJECT_HIST_CODE"/>
		<result property="projectHistDate" column="PROJECT_HIST_DATE"/>
		<result property="projectStatus" column="PROJECT_STATUS"/>
		<result property="projectStartDate" column="PROJECT_START_DATE"/>
		<result property="projectEndDate" column="PROJECT_END_DATE"/>
		<result property="projectCode" column="PROJECT_CODE"/>
		<result property="projectHistTime" column="PROJECT_HIST_TIME"/>
		<result property="projectIntro" column="PROJECT_INTRO"/>
		<result property="projectStartTime" column="PROJECT_START_TIME"/>
		<result property="projectEndTime" column="PROJECT_END_TIME"/>
		<collection property="project" resultMap="ProjectResultSet"/>
	</resultMap>



	<resultMap id="selectUserPJRset" type="com.stepup.agile.projectManage.model.vo.Project">
		<id property="projectCode" column="PROJECT_CODE"/>
		<result property="projectName" column="PROJECT_NAME"/>
		<result property="createDate" column="PROJECT_CREATE_DATE"/>
		<result property="createTime" column="PROJECT_CREATE_TIME"/>
		<result property="taskCnt" column="TASKCNT"/>
    	<collection property="projectHistory" resultMap="ProjectHistoryResultSet"/>
    	<collection property="member" resultMap="MemberResultSet"/>
    	<collection property="userTeamList" resultMap="UserTeamListResultSet"/>
    	<collection property="userProjectList" resultMap="UserProjectListResultSet"/>

	</resultMap>
	
	<!-- 사용자정보 2 -->
	<resultMap type="com.stepup.agile.userInfo.model.vo.Member" id="MemberResultSet2">
		<id property="userCode" column="USER_CODE"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userPhone" column="USER_PHONE"/>
		<result property="userCompName" column="USER_COMP_NAME"/>
		<result property="userCompDept" column="USER_COMP_DEPT"/>
		<result property="userCompJob" column="USER_COMP_JOB"/>
		<result property="userEnrollDate" column="USER_ENROLL_DATE"/>
		<result property="userStatus" column="USER_STATUS"/>
		<result property="userManagerYn" column="USER_MANAGER_YN"/>
		<result property="userEnrollTime" column="USER_ENROLL_TIME"/>
		<collection property="userTeamList" resultMap="UserTeamListResultSet"/>
	</resultMap>
	
	<select id="selectUserProject" resultMap="selectUserPJRset" parameterType="Project">
	 	SELECT *
	    FROM (SELECT PL.PROJECT_NAME
			  FROM USER_INFO I,
			       USER_TEAM_LIST T,
			       USER_PROJECT_LIST P,
			       PROJECT_LIST PL,
			       PROJECT_HISTORY PH
			 WHERE I.USER_CODE = T.USER_CODE
			   AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
			   AND P.USER_PROJECT_CODE = PL.PROJECT_CODE
			   AND P.PROJECT_CODE = PH.PROJECT_CODE
			   AND I.USER_CODE = (SELECT USER_CODE 
	                                FROM USER_INFO
	                               WHERE USER_EMAIL = #{userEmail})
	           AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[<=]]> PH.PROJECT_END_DATE AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[>=]]> PH.PROJECT_START_DATE) A
	    LEFT JOIN (SELECT COUNT(TASK_HIST_VALUE) AS TASKCNT, PROJECT_NAME
	          FROM (SELECT TK.TASK_CODE, PS.PROJECT_NAME
	                     , MAX(TS.TASK_HIST_VALUE) KEEP (DENSE_RANK LAST ORDER BY TS.TASK_HIST_UPDATE_DATE, TS.TASK_HIST_UPDATE_TIME) AS TASK_HIST_VALUE
	                  FROM USER_INFO I,
	                       USER_TEAM_LIST T,
	                       USER_PROJECT_LIST P,
	                       SPRINT_LIST S,
	                       TASK_LIST TK,
	                       TASK_HISTORY TS,
	                       PROJECT_LIST PS,
	                       PROJECT_HISTORY PH
	                 WHERE I.USER_CODE = T.USER_CODE
	                   AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
	                   AND P.USER_PROJECT_CODE = S.USER_PROJECT_CODE
	                   AND P.PROJECT_CODE = PS.PROJECT_CODE
	                   AND PS.PROJECT_CODE = PH.PROJECT_CODE
	                   AND S.SPRINT_CODE = TK.SPRINT_CODE
	                   AND TK.TASK_CODE = TS.TASK_CODE
	                   AND I.USER_CODE = #{userCode}
	                   AND TS.TASK_CATEGORY_CODE = 'I'
	                   AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[<=]]> PH.PROJECT_END_DATE AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[>=]]> PH.PROJECT_START_DATE
	              GROUP BY TK.TASK_CODE, TS.TASK_CATEGORY_CODE, PS.PROJECT_NAME)
	          WHERE TASK_HIST_VALUE LIKE '%미진행%'
	          GROUP BY PROJECT_NAME) B                         
	    ON (A.PROJECT_NAME = B.PROJECT_NAME)
	</select>
	
	<select id="selectUserProject2" resultMap="selectUserPJRset" parameterType="Project">
	 	SELECT *
	    FROM (SELECT PL.PROJECT_NAME
			  FROM USER_INFO I,
			       USER_TEAM_LIST T,
			       USER_PROJECT_LIST P,
			       PROJECT_LIST PL,
			       PROJECT_HISTORY PH
			 WHERE I.USER_CODE = T.USER_CODE
			   AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
			   AND P.USER_PROJECT_CODE = PL.PROJECT_CODE
			   AND P.PROJECT_CODE = PH.PROJECT_CODE
			   AND I.USER_CODE = (SELECT USER_CODE 
	                                FROM USER_INFO
	                               WHERE USER_EMAIL LIKE #{userEmail})
	           AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[<=]]> PH.PROJECT_END_DATE AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[>=]]> PH.PROJECT_START_DATE) A
	    LEFT JOIN (SELECT COUNT(TASK_HIST_VALUE) AS TASKCNT, PROJECT_NAME
	          FROM (SELECT TK.TASK_CODE, PS.PROJECT_NAME
	                     , MAX(TS.TASK_HIST_VALUE) KEEP (DENSE_RANK LAST ORDER BY TS.TASK_HIST_UPDATE_DATE, TS.TASK_HIST_UPDATE_TIME) AS TASK_HIST_VALUE
	                  FROM USER_INFO I,
	                       USER_TEAM_LIST T,
	                       USER_PROJECT_LIST P,
	                       SPRINT_LIST S,
	                       TASK_LIST TK,
	                       TASK_HISTORY TS,
	                       PROJECT_LIST PS,
	                       PROJECT_HISTORY PH
	                 WHERE I.USER_CODE = T.USER_CODE
	                   AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
	                   AND P.USER_PROJECT_CODE = S.USER_PROJECT_CODE
	                   AND P.PROJECT_CODE = PS.PROJECT_CODE
	                   AND PS.PROJECT_CODE = PH.PROJECT_CODE
	                   AND S.SPRINT_CODE = TK.SPRINT_CODE
	                   AND TK.TASK_CODE = TS.TASK_CODE
	                   AND I.USER_CODE = #{userCode}
	                   AND TS.TASK_CATEGORY_CODE = 'I'
	                   AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[<=]]> PH.PROJECT_END_DATE AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') <![CDATA[>=]]> PH.PROJECT_START_DATE
	              GROUP BY TK.TASK_CODE, TS.TASK_CATEGORY_CODE, PS.PROJECT_NAME)
	          WHERE TASK_HIST_VALUE LIKE '%진행중%'
	          GROUP BY PROJECT_NAME) B                         
	    ON (A.PROJECT_NAME = B.PROJECT_NAME)
	</select>

	<select id="selectTimelineProject" resultMap="selectUserPJRset" parameterType="ProjectHistory">
	SELECT H.PROJECT_HIST_DATE, H.PROJECT_STATUS,  J.PROJECT_NAME, H.PROJECT_START_DATE, H.PROJECT_END_DATE, H.PROJECT_CODE, H.PROJECT_INTRO, H.PROJECT_START_TIME, H.PROJECT_END_TIME, RANK() OVER (PARTITION BY H.PROJECT_CODE ORDER BY H.PROJECT_HIST_DATE DESC, H.PROJECT_HIST_TIME DESC) RK
         FROM USER_INFO I,
              USER_TEAM_LIST T,
              USER_PROJECT_LIST P,
              PROJECT_LIST J,
              PROJECT_HISTORY H
        WHERE I.USER_CODE = T.USER_CODE
          AND T.USER_TEAM_YN = 'Y' 
          AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
          AND P.PROJECT_CODE = J.PROJECT_CODE
          AND J.PROJECT_CODE = H.PROJECT_CODE 
          AND H.PROJECT_STATUS = 'N'
          AND I.USER_EMAIL = #{userEmail}
          AND H.PROJECT_HIST_CODE IN (
          SELECT PROJECT_HIST_CODE
  FROM (SELECT H.PROJECT_CODE,H.PROJECT_HIST_CODE, RANK() OVER (PARTITION BY H.PROJECT_CODE ORDER BY H.PROJECT_HIST_DATE DESC, H.PROJECT_HIST_TIME DESC) RK
         FROM USER_INFO I,
              USER_TEAM_LIST T,
              USER_PROJECT_LIST P,
              PROJECT_LIST J,
              PROJECT_HISTORY H
        WHERE I.USER_CODE  = T.USER_CODE
          AND T.USER_TEAM_YN = 'Y' 
          AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
          AND P.PROJECT_CODE = J.PROJECT_CODE
          AND J.PROJECT_CODE = H.PROJECT_CODE 
          AND H.PROJECT_STATUS = 'N'
          AND I.USER_EMAIL = #{userEmail}
        )
    WHERE RK = 1)
	</select>
	
	<insert id="updateTimeline" parameterType="ProjectHistory">
		INSERT INTO PROJECT_HISTORY
			VALUES (SEQ_PROJECT_HIST.NEXTVAL, TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'), 'N', #{startDate}, #{endDate},
			(SELECT H.PROJECT_CODE
			         FROM USER_INFO I,
			              USER_TEAM_LIST T,
			              USER_PROJECT_LIST P,
			              PROJECT_LIST J,
			              PROJECT_HISTORY H
			        WHERE I.USER_CODE = T.USER_CODE
			          AND T.USER_TEAM_YN = 'Y' 
			          AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
			          AND P.PROJECT_CODE = J.PROJECT_CODE
			          AND J.PROJECT_CODE = H.PROJECT_CODE 
			          AND H.PROJECT_STATUS = 'N'
			          AND I.USER_EMAIL = #{userEmail}
			          AND H.PROJECT_HIST_CODE = (
			          SELECT PROJECT_HIST_CODE
			  FROM (SELECT H.PROJECT_CODE,H.PROJECT_HIST_CODE, RANK() OVER (PARTITION BY H.PROJECT_CODE ORDER BY H.PROJECT_HIST_DATE DESC, H.PROJECT_HIST_TIME DESC) RK
			         FROM USER_INFO I,
			              USER_TEAM_LIST T,
			              USER_PROJECT_LIST P,
			              PROJECT_LIST J,
			              PROJECT_HISTORY H
			        WHERE I.USER_CODE  = T.USER_CODE
			          AND T.USER_TEAM_YN = 'Y' 
			          AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
			          AND P.PROJECT_CODE = J.PROJECT_CODE
			          AND J.PROJECT_CODE = H.PROJECT_CODE 
			          AND H.PROJECT_STATUS = 'N'
			          AND I.USER_EMAIL = #{userEmail}
			          AND J.PROJECT_NAME = #{projectName}
			        )
			    WHERE RK = 1))
			,  TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'), #{intro}, #{startTime}, #{endTime})
	</insert>
	
	   <!-- miso1 -->
   <!-- Project Insert -->
   <insert id="insertProject2" parameterType="Project">
      INSERT INTO PROJECT_LIST
      VALUES (SEQ_PROJECT.NEXTVAL, #{projectName},TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'),TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'))
   </insert>
   
   <!-- Project Insert and select Project Code-->
   <insert id="insertProject" parameterType="Project">
         INSERT INTO PROJECT_LIST (PROJECT_CODE, PROJECT_NAME, PROJECT_CREATE_DATE, PROJECT_CREATE_TIME)
         VALUES ( #{projectCode}, #{projectName},TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'),TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'))
      <selectKey keyProperty="projectCode" resultType="Integer" order="BEFORE">
            SELECT SEQ_PROJECT.NEXTVAL FROM DUAL
       </selectKey>   
    </insert>

   <!-- Insert ProjectHistory after Insert Project -->
   <!-- Project update-->
   <insert id="insertProjectHistory" parameterType="ProjectHistory">
      INSERT INTO PROJECT_HISTORY
      VALUES (SEQ_PROJECT_HIST.NEXTVAL, TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'),'N',#{projectStartDate},#{projectEndDate},#{projectCode},TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'),
            #{projectIntro}, #{projectStartTime},#{projectEndTime})
   </insert>

   <select id="selectUserTeamCode" resultMap="UserTeamListResultSet" parameterType="Member">
          SELECT 
                USER_CODE, USER_TEAM_CODE
          FROM 
                (SELECT 
                    I.USER_CODE, T.USER_TEAM_CODE, T.USER_TEAM_DATE, T.USER_TEAM_TIME,
                    RANK() OVER (PARTITION BY I.USER_CODE ORDER BY T.USER_TEAM_DATE DESC, T.USER_TEAM_TIME DESC) RK
                  FROM USER_INFO I, USER_TEAM_LIST T
                 WHERE T.USER_CODE = I.USER_CODE
                   AND T.USER_TEAM_YN = 'Y'
                 AND I.USER_STATUS = 'N'
                   AND I.USER_EMAIL = #{userEmail, jdbcType=VARCHAR}
            ORDER BY T.USER_TEAM_DATE DESC, T.USER_TEAM_TIME DESC)
          WHERE RK = 1
   </select>

	<!-- master -->
	<!-- Insert UserProjectList after Insert Project -->
	<insert id="insertUserProjectOne" parameterType="Project">
		INSERT INTO USER_PROJECT_LIST
		VALUES (#{projectCode}, TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'),TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'),DEFAULT,SEQ_USER_PROJECT.NEXTVAL,#{userTeamList.userTeamCode}, '01')
	</insert>
   <!-- member -->
   	<insert id="insertUserProjectMember" parameterType="hashMap">
		INSERT INTO USER_PROJECT_LIST
		VALUES (#{projectCode}, TO_CHAR(SYSDATE + 9/24, 'YYYY-MM-DD'),TO_CHAR(SYSDATE + 9/24, 'hh24:mi:ss'),DEFAULT,SEQ_USER_PROJECT.NEXTVAL,#{userTeamCode}, '02')
	</insert>
   

   <!-- ProjectList Select -->
   <select id="selectProjectList" resultMap="UserProjectListResultSet2" parameterType="userProjectList">
            SELECT 
          I.USER_CODE, I.USER_NAME,
          J.PROJECT_CODE, J.PROJECT_NAME,
          T.USER_TEAM_CODE,
            NVL(TY.SPRINT_TYPE_A, 0) AS SPRINT_TYPE_A, NVL(TY.SPRINT_TYPE_B,0) AS SPRINT_TYPE_B, NVL(TY.SPRINT_TYPE_C,0) AS SPRINT_TYPE_C,
          P.USER_PROJECT_AUTHORITY,P.USER_PROJECT_CODE,
          PH.PROJECT_START_DATE, PH.PROJECT_START_TIME, PH.PROJECT_END_DATE, PH.PROJECT_END_TIME, PH.PROJECT_INTRO
          FROM USER_PROJECT_LIST P, PROJECT_HISTORY PH, PROJECT_LIST J, USER_INFO I,USER_TEAM_LIST T,
            (SELECT PROJECT_CODE, SUM(SPRINT_TYPE_A) AS SPRINT_TYPE_A, SUM(SPRINT_TYPE_B) AS SPRINT_TYPE_B, SUM(SPRINT_TYPE_C) AS SPRINT_TYPE_C
              FROM(SELECT PROJECT_CODE, DECODE(SPRINT_TYPE, '01', 1, 0) AS SPRINT_TYPE_A, 
                          DECODE(SPRINT_TYPE, '02', 1, 0) AS SPRINT_TYPE_B,
                          DECODE(SPRINT_TYPE, '03', 1, 0) AS SPRINT_TYPE_C
                     FROM (SELECT SH.SPRINT_HIST_CODE, SH.SPRINT_HIST_UPDATE_DATE, SH.SPRINT_HIST_UPDATE_TIME, SH.SPRINT_TYPE, SH.SPRINT_CODE, UPL.PROJECT_CODE,
                             RANK() OVER (PARTITION BY SH.SPRINT_CODE ORDER BY SH.SPRINT_HIST_UPDATE_DATE DESC, SH.SPRINT_HIST_UPDATE_TIME DESC) LATEST
                             FROM SPRINT_HISTORY SH, SPRINT_LIST S, USER_PROJECT_LIST UPL
                            WHERE SH.SPRINT_CODE = S.SPRINT_CODE
                              AND S.USER_PROJECT_CODE = UPL.USER_PROJECT_CODE
                              AND UPL.PROJECT_CODE IN (SELECT J.PROJECT_CODE
                                                         FROM USER_INFO I,
                                                              USER_TEAM_LIST T,
                                                              USER_PROJECT_LIST P,
                                                              PROJECT_LIST J,
                                                              PROJECT_HISTORY H
                                                        WHERE I.USER_CODE  = T.USER_CODE
                                                          AND T.USER_TEAM_YN = 'Y' 
                                                          AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
                                                          AND P.PROJECT_CODE = J.PROJECT_CODE
                                                          AND J.PROJECT_CODE = H.PROJECT_CODE 
                                                          AND H.PROJECT_STATUS = 'N'
                                                          AND I.USER_EMAIL =#{userEmail, jdbcType=VARCHAR})
                        ) 
                  WHERE LATEST = 1
                 )
            GROUP BY PROJECT_CODE
            ) TY
          WHERE T.USER_TEAM_CODE = P.USER_TEAM_CODE
          AND P.PROJECT_CODE = J.PROJECT_CODE 
        AND TY.PROJECT_CODE(+) = P.PROJECT_CODE
          AND J.PROJECT_CODE = PH.PROJECT_CODE
          AND I.USER_CODE  = T.USER_CODE
          AND T.USER_TEAM_YN = 'Y'
          AND P.USER_PROJECT_STATUS = 'Y'
          AND I.USER_CODE IN (SELECT UI.USER_CODE
                                FROM USER_INFO UI, USER_TEAM_LIST UTL
                                WHERE UI.USER_CODE = UTL.USER_CODE
                                AND UTL.USER_TEAM_CODE IN (SELECT MAX(UTL.USER_TEAM_CODE)
                                                            FROM USER_TEAM_LIST UTL, USER_INFO UI
                                                            WHERE UI.USER_CODE = UTL.USER_CODE 
                                                            GROUP BY UI.USER_CODE, UI.USER_NAME)
                                AND UTL.USER_TEAM_YN = 'Y'
                                AND UTL.TEAM_CODE = (SELECT UTL.TEAM_CODE 
                                                        FROM USER_INFO UI, USER_TEAM_LIST UTL
                                                        WHERE UI.USER_CODE = UTL.USER_CODE 
                                                        AND UTL.USER_TEAM_CODE = (SELECT MAX(UTL1.USER_TEAM_CODE) 
                                                                                    FROM USER_INFO UI1, USER_TEAM_LIST UTL1
                                                                                   WHERE UI1.USER_CODE = UTL1.USER_CODE 
                                                                                     AND UI1.USER_EMAIL = #{userEmail, jdbcType=VARCHAR}
                                                                                     AND UTL1.USER_TEAM_YN = 'Y')
                                                        AND UI.USER_EMAIL = #{userEmail, jdbcType=VARCHAR})
                               )
          AND J.PROJECT_CODE IN (SELECT J.PROJECT_CODE
                                   FROM USER_INFO I,
                                        USER_TEAM_LIST T,
                                        USER_PROJECT_LIST P,
                                        PROJECT_LIST J,
                                        PROJECT_HISTORY H
                                  WHERE I.USER_CODE  = T.USER_CODE
                                    AND T.USER_TEAM_YN = 'Y' 
                                    AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
                                    AND P.PROJECT_CODE = J.PROJECT_CODE
                                    AND J.PROJECT_CODE = H.PROJECT_CODE 
                                    AND H.PROJECT_STATUS = 'N'
                                    AND I.USER_EMAIL =#{userEmail, jdbcType=VARCHAR})
             AND PH.PROJECT_HIST_CODE IN (SELECT PROJECT_HIST_CODE
                                              FROM (SELECT H.PROJECT_CODE,H.PROJECT_HIST_CODE, RANK() OVER (PARTITION BY H.PROJECT_CODE ORDER BY H.PROJECT_HIST_DATE DESC, H.PROJECT_HIST_TIME DESC) RK
                                                     FROM USER_INFO I,
                                                          USER_TEAM_LIST T,
                                                          USER_PROJECT_LIST P,
                                                          PROJECT_LIST J,
                                                          PROJECT_HISTORY H
                                                    WHERE I.USER_CODE  = T.USER_CODE
                                                      AND T.USER_TEAM_YN = 'Y' 
                                                      AND T.USER_TEAM_CODE = P.USER_TEAM_CODE
                                                      AND P.PROJECT_CODE = J.PROJECT_CODE
                                                      AND J.PROJECT_CODE = H.PROJECT_CODE 
                                                      AND H.PROJECT_STATUS = 'N'
                                                      AND I.USER_EMAIL =#{userEmail, jdbcType=VARCHAR})
                                              WHERE RK = 1
                                         )                                      
           ORDER BY PH.PROJECT_START_DATE DESC, PH.PROJECT_START_TIME DESC, J.PROJECT_NAME ASC, I.USER_NAME ASC
   </select>
   
	<select id="searchTeamMember" resultMap="MemberResultSet2" parameterType="Member">
		SELECT UI.USER_CODE, UI.USER_NAME, UTL.USER_TEAM_CODE
			FROM USER_INFO UI, USER_TEAM_LIST UTL
			WHERE UI.USER_CODE = UTL.USER_CODE
			AND UTL.USER_TEAM_CODE IN (SELECT MAX(UTL.USER_TEAM_CODE)
			                            FROM USER_TEAM_LIST UTL, USER_INFO UI
			                            WHERE UI.USER_CODE = UTL.USER_CODE 
			                            GROUP BY UI.USER_CODE, UI.USER_NAME)
			AND UTL.USER_TEAM_YN = 'Y' 
			AND UTL.TEAM_CODE = (SELECT UTL.TEAM_CODE 
			                        FROM USER_INFO UI, USER_TEAM_LIST UTL
			                        WHERE UI.USER_CODE = UTL.USER_CODE 
			                        AND UTL.USER_TEAM_CODE = (SELECT MAX(UTL1.USER_TEAM_CODE) 
			                                                    FROM USER_INFO UI1, USER_TEAM_LIST UTL1
			                                                   WHERE UI1.USER_CODE = UTL1.USER_CODE 
			                                                     AND UI1.USER_EMAIL = #{userEmail, jdbcType=VARCHAR}                                        
			                                                     AND UTL1.USER_TEAM_YN = 'Y')
			                        AND UI.USER_EMAIL = #{userEmail, jdbcType=VARCHAR})
		AND UI.USER_NAME LIKE '%'|| #{userName, jdbcType=VARCHAR} ||'%'
	</select>
	<select id="checkBelongTo" resultMap="UserProjectListResultSet2" parameterType="hashMap">
		SELECT *
		  FROM USER_PROJECT_LIST
		 WHERE PROJECT_CODE = #{projectCode, jdbcType=VARCHAR}
		   AND USER_TEAM_CODE = #{userTeamCode, jdbcType=VARCHAR}
		   AND USER_PROJECT_STATUS = 'Y'
	</select>
</mapper>